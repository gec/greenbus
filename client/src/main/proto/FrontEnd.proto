/**
 * Copyright 2011-2016 Green Energy Corp.
 *
 * Licensed to Green Energy Corp (www.greenenergycorp.com) under one or more
 * contributor license agreements. See the NOTICE file distributed with this
 * work for additional information regarding copyright ownership. Green Energy
 * Corp licenses this file to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations under
 * the License.
 */
package greenbus.client;

option java_package = "io.greenbus.client.service.proto";
option java_outer_classname = "FrontEnd";

import "ServiceEnvelopes.proto";
import "Model.proto";



/*
    Represents an instance of a front-end having registered to provide services for and Endpoint.
*/
message FrontEndRegistration {

    /*
        The UUID for the Endpoint the front-end is servicing.
    */
    optional ModelUUID endpoint_uuid = 1;

    /*
        The service address the front-end may use for publishing Measurements to a measurement processor.
    */
    optional string input_address = 2;

    /*
        The service address the front-end subscribes to for receiving CommandRequests.

        @optional
    */
    optional string command_address = 3;
}

/*
    Represents the status of a front-end that is serving an Endpoint. Allows front-ends to report both their own
    presence and the state of any remote connection.
*/
message FrontEndConnectionStatus {

    /*
        Enumerates the possible statuses of a front-end connection.
    */
    enum Status {
        COMMS_UP = 1;   // Nominal status.
        COMMS_DOWN = 2; // A communications failure.
        UNKNOWN = 3;    // Unknown status.
        ERROR = 4;      // An error status, likely requiring administrator intervention.
    }

    /*
        The UUID of the Endpoint served by this front-end.
    */
    optional ModelUUID endpoint_uuid = 1;

    /*
        The name of the Endpoint served by this front-end.
    */
    optional string endpoint_name = 2;

    /*
        The current reported status of the front-end connection.
    */
    optional Status state = 3;

    /*
        The timestamp of the most recent status update.

        Time is measured in milliseconds since midnight, January 1, 1970 UTC.
    */
    optional uint64 update_time = 4;
}

/*
    Notification of a change to a FrontEndConnectionStatus.
*/
message FrontEndConnectionStatusNotification {

    /*
        Whether object was added, removed, or modified.
    */
    optional greenbus.client.envelope.SubscriptionEventType event_type = 1;

    /*
        Updated state of the object.
    */
    optional FrontEndConnectionStatus value = 2;
}
